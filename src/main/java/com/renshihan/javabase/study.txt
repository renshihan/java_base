1.java缓存类型
    堆缓存：使用java堆内存存储缓存对象，使用堆缓存的好处是没有序列化和反序列化，是最快的缓存。 缺点是缓存数据量很大时，GC暂停时间会很长，
存储容量受限于堆空间大小。一般通过软引用和弱引用来存储缓存对象，即当堆内存不足时，可以强制回收这部分内存释放堆内存空间。一般存储较热的数据。
可以使用GuavaCache,Ehcache3.x,MapDB实现。
    堆外缓存：可减少GC暂停时间，支持更大的缓存空间，但读取需要序列化和反序列化，因此比堆缓存慢很多，可以使用Ehcache3X,MapDB实现。
    磁盘缓存：JVM重启时数据还是存在的，可使用Ehcache3.x,MapDB实现
    分布式缓存：解决1.单机容量问题，2.数据一致性问题。 可使用ehcache-clustered(配合Terracotta server) 实现java进程间分布式缓存。也可使用redis
实现分布式缓存.

    两种模式：
        单机时：存储最热的数据到堆缓存，相对热的数据到堆外缓存，不热的数据到磁盘缓存
        集群时：最热的数据到堆缓存，相对热数据到堆外缓存，全量数据到分布式缓存。

    Guava Cache 只提供对缓存，小巧灵活，性能最好，如果只是用堆缓存，那么使用它。
    Ehcache 3.x提供了堆缓存，堆外缓存，磁盘缓存，分布式缓存。但是，其代码注释比较少，API不完善。
    MapDB是一款嵌入式java数据库引擎和集合框架。提供了Maps,Sets,Lists,Queues,Bitmaps的支持，还支持ACID事务，增量备份。支持堆缓存，堆外缓存，磁盘缓存。

2.回收算法
    FIFO 先进先出算法，先被放入缓存的先被移除
    LRU 最近最少使用算法，使用时间距离现在最久的那个被移除   实际中用的较多
    LFU 最不常用算法，一定时间段内使用次数（频率）最少的那个被移除。
